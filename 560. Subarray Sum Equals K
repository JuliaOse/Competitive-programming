class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        count = 0
        '''
        prefix = [0] * (len(nums) + 1)
        if len(nums) == 1:
            return 0
        for i in range(1, len(prefix)):
            prefix[i] = prefix[i-1] + nums[i-1]
        #print(prefix)
        for i in range(len(prefix)):
            if prefix[i] >= k:
                count += 1
        return count
        '''
        sum_ = 0
        prefix = {0:1}

        for i in range(len(nums)):
            sum_ += nums[i]
            diff = sum_ - k
            if diff in prefix:
                count += prefix[diff]
            
            if sum_ in prefix:
                prefix[sum_] += 1
            else:
                prefix[sum_] = 1
        return count
        #time: O(n)
        #space : O(n)
            
